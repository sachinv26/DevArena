{"ast":null,"code":"import _defineProperty from \"/Users/sachin/DevArena/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/sachin/DevArena/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/sachin/DevArena/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/sachin/DevArena/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/sachin/DevArena/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/sachin/DevArena/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/sachin/DevArena/client/src/components/auth/Register.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/authActions';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Register = /*#__PURE__*/function (_Component) {\n  _inherits(Register, _Component);\n  var _super = _createSuper(Register);\n  function Register() {\n    var _this;\n    _classCallCheck(this, Register);\n    _this = _super.call(this);\n    _this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: '',\n      errors: {}\n    };\n\n    // This is to bind the onChange listener function with the 'this' of the state (We don't need these if we use arrow functions like in Login component)\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(Register, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.auth.isAuthenticated) {\n        this.props.history.push('/dashboard');\n      }\n    }\n\n    // If we receive new error props we are going to put them in the component state\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n\n    // We need this for 2 way binding\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n      };\n      this.props.registerUser(newUser, this.props.history);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-8 m-auto\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"display-5 text-center\",\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"lead text-center\",\n                children: \"Create your DevArena account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                noValidate: true,\n                onSubmit: this.onSubmit /* Avoid the native html5 validation for email */,\n                children: [/*#__PURE__*/_jsxDEV(TextFieldGroup, {\n                  placeholder: \"Name\",\n                  onChange: this.onChange,\n                  error: errors.name,\n                  value: this.state.name,\n                  name: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TextFieldGroup, {\n                  placeholder: \"Email Address\",\n                  type: \"email\",\n                  onChange: this.onChange,\n                  error: errors.email,\n                  value: this.state.email,\n                  name: \"email\",\n                  info: \"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TextFieldGroup, {\n                  placeholder: \"Password\",\n                  type: \"password\",\n                  onChange: this.onChange,\n                  error: errors.password,\n                  value: this.state.password,\n                  name: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TextFieldGroup, {\n                  placeholder: \"Confirm Password\",\n                  type: \"password\",\n                  onChange: this.onChange,\n                  error: errors.password2,\n                  value: this.state.password2,\n                  name: \"password2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary btn-lg btn-block\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n  return Register;\n}(Component);\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\n// The parenthesis are used in place of having a return statement\n// When updates in the Redux store happen, map them to this component's props\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    //The state.auth comes from the index.js of the reducers\n    errors: state.errors\n  };\n};\nexport default connect(mapStateToProps, {\n  registerUser: registerUser\n})(withRouter(Register));","map":{"version":3,"names":["React","Component","PropTypes","withRouter","connect","registerUser","TextFieldGroup","jsxDEV","_jsxDEV","Register","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","name","email","password","password2","errors","onChange","bind","_assertThisInitialized","onSubmit","_createClass","key","value","componentDidMount","props","auth","isAuthenticated","history","push","UNSAFE_componentWillReceiveProps","nextProps","setState","e","_defineProperty","target","preventDefault","newUser","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","noValidate","placeholder","error","type","info","propTypes","func","isRequired","object","mapStateToProps"],"sources":["/Users/sachin/DevArena/client/src/components/auth/Register.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/authActions';\nimport TextFieldGroup from '../common/TextFieldGroup';\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            password2: '',\n            errors: {}\n        };\n\n        // This is to bind the onChange listener function with the 'this' of the state (We don't need these if we use arrow functions like in Login component)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/dashboard');\n        }\n    }\n\n    // If we receive new error props we are going to put them in the component state\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    // We need this for 2 way binding\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2\n        };\n\n        this.props.registerUser(newUser, this.props.history);\n    }\n\n    render() {\n        const { errors } = this.state;\n\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-5 text-center\">Sign Up</h1>\n                            <p className=\"lead text-center\">\n                                Create your DevArena account\n                            </p>\n                            <form\n                                noValidate\n                                onSubmit={\n                                    this.onSubmit\n                                } /* Avoid the native html5 validation for email */\n                            >\n                                <TextFieldGroup\n                                    placeholder=\"Name\"\n                                    onChange={this.onChange}\n                                    error={errors.name}\n                                    value={this.state.name}\n                                    name=\"name\"\n                                />\n                                <TextFieldGroup\n                                    placeholder=\"Email Address\"\n                                    type=\"email\"\n                                    onChange={this.onChange}\n                                    error={errors.email}\n                                    value={this.state.email}\n                                    name=\"email\"\n                                    info=\"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\n                                />\n                                <TextFieldGroup\n                                    placeholder=\"Password\"\n                                    type=\"password\"\n                                    onChange={this.onChange}\n                                    error={errors.password}\n                                    value={this.state.password}\n                                    name=\"password\"\n                                />\n                                <TextFieldGroup\n                                    placeholder=\"Confirm Password\"\n                                    type=\"password\"\n                                    onChange={this.onChange}\n                                    error={errors.password2}\n                                    value={this.state.password2}\n                                    name=\"password2\"\n                                />\n                                <input type=\"submit\" className=\"btn btn-primary btn-lg btn-block\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\n// The parenthesis are used in place of having a return statement\n// When updates in the Redux store happen, map them to this component's props\nconst mapStateToProps = state => ({\n    auth: state.auth, //The state.auth comes from the index.js of the reducers\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(withRouter(Register));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}