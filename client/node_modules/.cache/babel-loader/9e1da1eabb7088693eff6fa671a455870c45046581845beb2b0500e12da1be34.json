{"ast":null,"code":"import axios from 'axios';\nimport { ADD_POST, CLEAR_ERRORS, DELETE_POST, GET_ERRORS, GET_POST, GET_POSTS, POST_LOADING } from './types';\n\n// Add Posts\nexport var addPost = function addPost(postData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post('https://devarena-byn0.onrender.com/api/posts', postData).then(function (res) {\n      return dispatch({\n        type: ADD_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\n\n// Get Posts\nexport var getPosts = function getPosts() {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get('https://devarena-byn0.onrender.com/api/posts').then(function (res) {\n      return dispatch({\n        type: GET_POSTS,\n        payload: res.data\n      });\n    }).catch(function () {\n      return dispatch({\n        type: GET_POSTS,\n        payload: null\n      });\n    });\n  };\n};\n\n// Get Post\nexport var getPost = function getPost(id) {\n  return function (dispatch) {\n    dispatch(setPostLoading());\n    axios.get(\"https://devarena-byn0.onrender.com/api/posts/\".concat(id)).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function () {\n      return dispatch({\n        type: GET_POST,\n        payload: null\n      });\n    });\n  };\n};\n\n// Delete Post\nexport var deletePost = function deletePost(id) {\n  return function (dispatch) {\n    axios.delete(\"https://devarena-byn0.onrender.com/api/posts/\".concat(id)).then(function () {\n      return dispatch({\n        type: DELETE_POST,\n        payload: id\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\n\n//Add Like\nexport var addLike = function addLike(id) {\n  return function (dispatch) {\n    axios.post(\"https://devarena-byn0.onrender.com/api/posts/like/\".concat(id)).then(function () {\n      return dispatch(getPosts());\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\n\n//Remove Like\nexport var removeLike = function removeLike(id) {\n  return function (dispatch) {\n    axios.post(\"https://devarena-byn0.onrender.com/api/posts/unlike/\".concat(id)).then(function () {\n      return dispatch(getPosts());\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\n\n// Add Comment\nexport var addComment = function addComment(postId, commentData) {\n  return function (dispatch) {\n    dispatch(clearErrors());\n    axios.post(\"https://devarena-byn0.onrender.com/api/posts/comment/\".concat(postId), commentData).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\n\n// Delete Comment\nexport var deleteComment = function deleteComment(postId, commentId) {\n  return function (dispatch) {\n    axios.delete(\"https://devarena-byn0.onrender.com/api/posts/comment/\".concat(postId, \"/\").concat(commentId)).then(function (res) {\n      return dispatch({\n        type: GET_POST,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\n\n// Set loading state\nexport var setPostLoading = function setPostLoading() {\n  return {\n    type: POST_LOADING\n  };\n};\n\n// Clear Errors\nexport var clearErrors = function clearErrors() {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"names":["axios","ADD_POST","CLEAR_ERRORS","DELETE_POST","GET_ERRORS","GET_POST","GET_POSTS","POST_LOADING","addPost","postData","dispatch","clearErrors","post","then","res","type","payload","data","catch","err","response","getPosts","setPostLoading","get","getPost","id","concat","deletePost","delete","addLike","removeLike","addComment","postId","commentData","deleteComment","commentId"],"sources":["/Users/sachin/DevArena/client/src/actions/postActions.js"],"sourcesContent":["import axios from 'axios';\nimport { ADD_POST, CLEAR_ERRORS, DELETE_POST, GET_ERRORS, GET_POST, GET_POSTS, POST_LOADING } from './types';\n\n// Add Posts\nexport const addPost = postData => dispatch => {\n    dispatch(clearErrors());\n\n    axios\n        .post('https://devarena-byn0.onrender.com/api/posts', postData)\n        .then(res =>\n            dispatch({\n                type: ADD_POST,\n                payload: res.data\n            })\n        )\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Get Posts\nexport const getPosts = () => dispatch => {\n    dispatch(setPostLoading());\n\n    axios\n        .get('https://devarena-byn0.onrender.com/api/posts')\n        .then(res =>\n            dispatch({\n                type: GET_POSTS,\n                payload: res.data\n            })\n        )\n        .catch(() =>\n            dispatch({\n                type: GET_POSTS,\n                payload: null\n            })\n        );\n};\n\n// Get Post\nexport const getPost = id => dispatch => {\n    dispatch(setPostLoading());\n\n    axios\n        .get(`https://devarena-byn0.onrender.com/api/posts/${id}`)\n        .then(res =>\n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            })\n        )\n        .catch(() =>\n            dispatch({\n                type: GET_POST,\n                payload: null\n            })\n        );\n};\n\n// Delete Post\nexport const deletePost = id => dispatch => {\n    axios\n        .delete(`https://devarena-byn0.onrender.com/api/posts/${id}`)\n        .then(() =>\n            dispatch({\n                type: DELETE_POST,\n                payload: id\n            })\n        )\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n//Add Like\nexport const addLike = id => dispatch => {\n    axios\n        .post(`https://devarena-byn0.onrender.com/api/posts/like/${id}`)\n        .then(() => dispatch(getPosts()))\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n//Remove Like\nexport const removeLike = id => dispatch => {\n    axios\n        .post(`https://devarena-byn0.onrender.com/api/posts/unlike/${id}`)\n        .then(() => dispatch(getPosts()))\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Add Comment\nexport const addComment = (postId, commentData) => dispatch => {\n    dispatch(clearErrors());\n\n    axios\n        .post(`https://devarena-byn0.onrender.com/api/posts/comment/${postId}`, commentData)\n        .then(res =>\n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            })\n        )\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Delete Comment\nexport const deleteComment = (postId, commentId) => dispatch => {\n    axios\n        .delete(`https://devarena-byn0.onrender.com/api/posts/comment/${postId}/${commentId}`)\n        .then(res =>\n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            })\n        )\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Set loading state\nexport const setPostLoading = () => {\n    return {\n        type: POST_LOADING\n    };\n};\n\n// Clear Errors\nexport const clearErrors = () => {\n    return {\n        type: CLEAR_ERRORS\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}