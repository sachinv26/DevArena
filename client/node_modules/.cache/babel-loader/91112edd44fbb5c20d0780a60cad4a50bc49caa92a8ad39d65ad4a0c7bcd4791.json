{"ast":null,"code":"import _defineProperty from\"/Users/sachin/DevArena/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _classCallCheck from\"/Users/sachin/DevArena/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/sachin/DevArena/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/Users/sachin/DevArena/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/Users/sachin/DevArena/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/sachin/DevArena/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import{withRouter}from'react-router-dom';import{connect}from'react-redux';import{registerUser}from'../../actions/authActions';import TextFieldGroup from'../common/TextFieldGroup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Register=/*#__PURE__*/function(_Component){_inherits(Register,_Component);var _super=_createSuper(Register);function Register(){var _this;_classCallCheck(this,Register);_this=_super.call(this);_this.state={name:'',email:'',password:'',password2:'',errors:{}};// This is to bind the onChange listener function with the 'this' of the state (We don't need these if we use arrow functions like in Login component)\n_this.onChange=_this.onChange.bind(_assertThisInitialized(_this));_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(Register,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.auth.isAuthenticated){this.props.history.push('/dashboard');}}// If we receive new error props we are going to put them in the component state\n},{key:\"UNSAFE_componentWillReceiveProps\",value:function UNSAFE_componentWillReceiveProps(nextProps){if(nextProps.errors){this.setState({errors:nextProps.errors});}}// We need this for 2 way binding\n},{key:\"onChange\",value:function onChange(e){this.setState(_defineProperty({},e.target.name,e.target.value));}},{key:\"onSubmit\",value:function onSubmit(e){e.preventDefault();var newUser={name:this.state.name,email:this.state.email,password:this.state.password,password2:this.state.password2};this.props.registerUser(newUser,this.props.history);}},{key:\"render\",value:function render(){var errors=this.state.errors;return/*#__PURE__*/_jsx(\"div\",{className:\"register\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-8 m-auto\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"display-5 text-center\",children:\"Sign Up\"}),/*#__PURE__*/_jsx(\"p\",{className:\"lead text-center\",children:\"Create your DevArena account\"}),/*#__PURE__*/_jsxs(\"form\",{noValidate:true,onSubmit:this.onSubmit/* Avoid the native html5 validation for email */,children:[/*#__PURE__*/_jsx(TextFieldGroup,{placeholder:\"Name\",onChange:this.onChange,error:errors.name,value:this.state.name,name:\"name\"}),/*#__PURE__*/_jsx(TextFieldGroup,{placeholder:\"Email Address\",type:\"email\",onChange:this.onChange,error:errors.email,value:this.state.email,name:\"email\",info:\"This site uses Gravatar so if you want a profile image, use a Gravatar email\"}),/*#__PURE__*/_jsx(TextFieldGroup,{placeholder:\"Password\",type:\"password\",onChange:this.onChange,error:errors.password,value:this.state.password,name:\"password\"}),/*#__PURE__*/_jsx(TextFieldGroup,{placeholder:\"Confirm Password\",type:\"password\",onChange:this.onChange,error:errors.password2,value:this.state.password2,name:\"password2\"}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",className:\"btn btn-primary btn-lg btn-block\"})]})]})})})});}}]);return Register;}(Component);// The parenthesis are used in place of having a return statement\n// When updates in the Redux store happen, map them to this component's props\nvar mapStateToProps=function mapStateToProps(state){return{auth:state.auth,//The state.auth comes from the index.js of the reducers\nerrors:state.errors};};export default connect(mapStateToProps,{registerUser:registerUser})(withRouter(Register));","map":{"version":3,"names":["React","Component","withRouter","connect","registerUser","TextFieldGroup","jsx","_jsx","jsxs","_jsxs","Register","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","name","email","password","password2","errors","onChange","bind","_assertThisInitialized","onSubmit","_createClass","key","value","componentDidMount","props","auth","isAuthenticated","history","push","UNSAFE_componentWillReceiveProps","nextProps","setState","e","_defineProperty","target","preventDefault","newUser","render","className","children","noValidate","placeholder","error","type","info","mapStateToProps"],"sources":["/Users/sachin/DevArena/client/src/components/auth/Register.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/authActions';\nimport TextFieldGroup from '../common/TextFieldGroup';\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            password2: '',\n            errors: {}\n        };\n\n        // This is to bind the onChange listener function with the 'this' of the state (We don't need these if we use arrow functions like in Login component)\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push('/dashboard');\n        }\n    }\n\n    // If we receive new error props we are going to put them in the component state\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    // We need this for 2 way binding\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2\n        };\n\n        this.props.registerUser(newUser, this.props.history);\n    }\n\n    render() {\n        const { errors } = this.state;\n\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-5 text-center\">Sign Up</h1>\n                            <p className=\"lead text-center\">\n                                Create your DevArena account\n                            </p>\n                            <form\n                                noValidate\n                                onSubmit={\n                                    this.onSubmit\n                                } /* Avoid the native html5 validation for email */\n                            >\n                                <TextFieldGroup\n                                    placeholder=\"Name\"\n                                    onChange={this.onChange}\n                                    error={errors.name}\n                                    value={this.state.name}\n                                    name=\"name\"\n                                />\n                                <TextFieldGroup\n                                    placeholder=\"Email Address\"\n                                    type=\"email\"\n                                    onChange={this.onChange}\n                                    error={errors.email}\n                                    value={this.state.email}\n                                    name=\"email\"\n                                    info=\"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\n                                />\n                                <TextFieldGroup\n                                    placeholder=\"Password\"\n                                    type=\"password\"\n                                    onChange={this.onChange}\n                                    error={errors.password}\n                                    value={this.state.password}\n                                    name=\"password\"\n                                />\n                                <TextFieldGroup\n                                    placeholder=\"Confirm Password\"\n                                    type=\"password\"\n                                    onChange={this.onChange}\n                                    error={errors.password2}\n                                    value={this.state.password2}\n                                    name=\"password2\"\n                                />\n                                <input type=\"submit\" className=\"btn btn-primary btn-lg btn-block\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\n// The parenthesis are used in place of having a return statement\n// When updates in the Redux store happen, map them to this component's props\nconst mapStateToProps = state => ({\n    auth: state.auth, //The state.auth comes from the index.js of the reducers\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(withRouter(Register));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}